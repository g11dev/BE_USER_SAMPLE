generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//---------------------------------------------------------------------//

model User {
  id           Int           @id @default(autoincrement())
  role         Role          @default(USER)
  username     String        @unique @db.VarChar(20)
  createdAt    DateTime      @default(now())
  email        String        @unique
  // password     String
  futureEvents FutureEvent[]
  pastEvents   PastEvent[]
}

enum Role {
  ADMIN
  USER
}

model FutureEvent {
  id         Int        @id @default(autoincrement())
  createdAt  DateTime   @default(now())
  title      String     @db.VarChar(50)
  image      String
  date       DateTime
  published  Boolean    @default(false)
  location   Location   @relation(fields: [locationId], references: [id])
  locationId Int
  categories Category[]
  users      User[]
  questions  Question[]
}

model Location {
  id           Int           @id @default(autoincrement())
  name         String        @db.VarChar(50)
  address      String        @db.VarChar(50)
  image        String
  pastEvents   PastEvent[]
  futureEvents FutureEvent[]

  @@unique([name, address])
}

model PastEvent {
  id          Int        @id @default(autoincrement())
  title       String     @db.VarChar(50)
  location    Location   @relation(fields: [locationId], references: [id])
  locationId  Int
  date        DateTime
  description String?    @db.VarChar(200)
  categories  Category[]
  users       User[]
}

model Question {
  id           Int           @id @default(autoincrement())
  question     String
  answers      String[] // add interface type?
  rightAnswer  String
  category     Category      @relation(fields: [categoryId], references: [id])
  categoryId   Int
  futureEvents FutureEvent[]
}

model Category {
  id           Int           @id @default(autoincrement())
  name         String        @unique @db.VarChar(20)
  icon         String
  question     Question[]
  futureEvents FutureEvent[]
  pastEvents   PastEvent[]
}
